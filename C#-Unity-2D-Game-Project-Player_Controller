using Platformer.Mechanics;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices.ComTypes;
using UnityEngine;
using UnityEngine.UI;

public class playercontroller : MonoBehaviour
{
    // Start() variables
    private Rigidbody2D rb;
    private Animator anim;
    private Collider2D coll;

    public int coin = 0;
    public Text cointext;

    
    //Animation variables
    private enum State {idle, running, jumping, falling,hurt}
    private State state = State.idle;
    
    // Inspector variables
    public LayerMask ground;
    public float speed = 5f;
    public float jumpforce = 10f;
    public float hurtforce = 10f;

    private void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        anim = GetComponent<Animator>();
        coll = GetComponent<Collider2D>();
    }
    private void Update()
    {
        if(state != State.hurt)
        {
            Movement();
            
        }
        AnimationState();
        anim.SetInteger("state", (int)state); // sets Animation based on  Enumerator state
    }
    

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if(collision.tag == "Coin")
        {
            Destroy(collision.gameObject);
            coin += 1;
            cointext.text = coin.ToString();
        }
    }

    private void OnCollisionEnter2D(Collision2D other)
    {
        if(other.gameObject.tag =="Enemy") 
        {
            Enemy enemy = other.gameObject.GetComponent<Enemy>();

            if(state == State.falling)
            {
                enemy.Trampolin();
                Jump();
            }
            else
            {
                state = State.hurt;
                if(other.gameObject.transform.position.x > transform.position.x)
                {
                    // Enemy is to my right therefore I should be damaged and move left.
                    rb.velocity = new Vector2(-hurtforce, rb.velocity.y)  ;

                }
                else
                {
                    // Enemy is to my left therefore I should be damaged and move right.
                    rb.velocity = new Vector2(hurtforce, rb.velocity.y);
                }

            }

        }
    }
    private void Movement()
    {
        float hDirection = Input.GetAxis("Horizontal");
        if (hDirection < 0)
        {
            rb.velocity = new Vector2(-speed, rb.velocity.y);
            transform.localScale = new Vector2(-1, 1);

        }
        if (hDirection > 0)

        {
            rb.velocity = new Vector2(speed, rb.velocity.y);
            transform.localScale = new Vector2(1, 1);
        }
        if (Input.GetButtonDown("Jump") && coll.IsTouchingLayers(ground))
        {
            Jump();
        }
    }

    private void Jump()
    {
        rb.velocity = new Vector2(rb.velocity.x, jumpforce);
        state = State.jumping;
    }
    private void AnimationState()
    {
        if (state == State.jumping)
        {
            if (rb.velocity.y < .1f)
            {
                state = State.falling;
            }
        }
        else if (state == State.falling)
        {
            if(coll.IsTouchingLayers(ground))
            {
                state = State.idle;
            }
        }
        else if (state == State.hurt)
        {
            if(Mathf.Abs(rb.velocity.x) < .1f)
            {
                state = State.idle;
            }
        }
        else if (state == State.jumping)
        {
        }
        else if (Mathf.Abs(rb.velocity.x) > 2f)
        {
            state = State.running;
            // Moving.
        }   
        else
        {
            state = State.idle;
        }
    }
}
